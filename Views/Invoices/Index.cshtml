@*@model IEnumerable<RentalManagement.Models.Invoice>*@
@model PagedList.IPagedList<RentalManagement.Models.Invoice>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    <!--<a onclick="showInPopup('@Url.Action("Create","Invoice")','Create New')" class="btn btn-success"></a>-->
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>

        <th>
            Invoice Number
        </th>
        <th>
            Total Amount
        </th>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm })
        </th>
        <th>
            @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.NameSortParm })
        </th>
        <th>
            Job Title
        </th>
        <th>
            Equipment Name
        </th>
        <th>
            SalesPerson Name
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.Invoice_No)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Amount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.User.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.User.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Job.Job_Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Rental.Equipment_Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Vendor.SalesPerson)
        </th>*@
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Invoice_No)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Job.Job_Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rental.Equipment_Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Vendor.SalesPerson)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Invoice_ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.Invoice_ID }) |

                <button type="button" class="btn btn-danger btn-sm" data-toggle="modal" data-target="#myModal">@Html.ActionLink("Delete", "Delete", new { id = item.Invoice_ID })</button>
                <!-- Modal -->
                <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                    <div class="modal-dialog modal-sm" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                <h4 class="modal-title" id="myModalLabel">Confirm Delete</h4>
                            </div>
                            <div class="modal-body">
                                Are you sure you want to delete this invoice?
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                <input type="submit" value="Delete" class="btn btn-danger" />
                            </div>
                        </div>
                    </div>
                </div>


            </td>
        </tr>
    }

</table>
<br />

    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
